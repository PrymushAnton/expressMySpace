model auth_group {
  id                     Int                      @id @default(autoincrement())
  name                   String                   @unique(map: "name") @db.VarChar(150)
  auth_group_permissions auth_group_permissions[]
  auth_user_groups       auth_user_groups[]
}

model auth_group_permissions {
  id              BigInt          @id @default(autoincrement())
  group_id        Int
  permission_id   Int
  auth_permission auth_permission @relation(fields: [permission_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "auth_group_permissio_permission_id_84c5c92e_fk_auth_perm")
  auth_group      auth_group      @relation(fields: [group_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "auth_group_permissions_group_id_b120cbf9_fk_auth_group_id")

  @@unique([group_id, permission_id], map: "auth_group_permissions_group_id_permission_id_0cd325b0_uniq")
  @@index([permission_id], map: "auth_group_permissio_permission_id_84c5c92e_fk_auth_perm")
}

model auth_permission {
  id                         Int                          @id @default(autoincrement())
  name                       String                       @db.VarChar(255)
  content_type_id            Int
  codename                   String                       @db.VarChar(100)
  auth_group_permissions     auth_group_permissions[]
  django_content_type        django_content_type          @relation(fields: [content_type_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "auth_permission_content_type_id_2f476e4b_fk_django_co")
  auth_user_user_permissions auth_user_user_permissions[]

  @@unique([content_type_id, codename], map: "auth_permission_content_type_id_codename_01ab375a_uniq")
}

model auth_user_groups {
  id         BigInt     @id @default(autoincrement())
  user_id    Int
  group_id   Int
  auth_group auth_group @relation(fields: [group_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "auth_user_groups_group_id_97559544_fk_auth_group_id")
  auth_user  auth_user  @relation(fields: [user_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "auth_user_groups_user_id_6a12ed8b_fk_auth_user_id")

  @@unique([user_id, group_id], map: "auth_user_groups_user_id_group_id_94350c0c_uniq")
  @@index([group_id], map: "auth_user_groups_group_id_97559544_fk_auth_group_id")
}

model auth_user_user_permissions {
  id              BigInt          @id @default(autoincrement())
  user_id         Int
  permission_id   Int
  auth_permission auth_permission @relation(fields: [permission_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "auth_user_user_permi_permission_id_1fbb5f2c_fk_auth_perm")
  auth_user       auth_user       @relation(fields: [user_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "auth_user_user_permissions_user_id_a95ead1b_fk_auth_user_id")

  @@unique([user_id, permission_id], map: "auth_user_user_permissions_user_id_permission_id_14a6b632_uniq")
  @@index([permission_id], map: "auth_user_user_permi_permission_id_1fbb5f2c_fk_auth_perm")
}

/// This table contains check constraints and requires additional setup for migrations. Visit https://pris.ly/d/check-constraints for more info.
model django_admin_log {
  id                  Int                  @id @default(autoincrement())
  action_time         DateTime             @db.DateTime(6)
  object_id           String?              @db.LongText
  object_repr         String               @db.VarChar(200)
  action_flag         Int                  @db.UnsignedSmallInt
  change_message      String               @db.LongText
  content_type_id     Int?
  user_id             Int
  django_content_type django_content_type? @relation(fields: [content_type_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "django_admin_log_content_type_id_c4bce8eb_fk_django_co")
  auth_user           auth_user            @relation(fields: [user_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "django_admin_log_user_id_c564eba6_fk_auth_user_id")

  @@index([content_type_id], map: "django_admin_log_content_type_id_c4bce8eb_fk_django_co")
  @@index([user_id], map: "django_admin_log_user_id_c564eba6_fk_auth_user_id")
}

model django_content_type {
  id               Int                @id @default(autoincrement())
  app_label        String             @db.VarChar(100)
  model            String             @db.VarChar(100)
  auth_permission  auth_permission[]
  django_admin_log django_admin_log[]

  @@unique([app_label, model], map: "django_content_type_app_label_model_76bd3d3b_uniq")
}

model django_migrations {
  id      BigInt   @id @default(autoincrement())
  app     String   @db.VarChar(255)
  name    String   @db.VarChar(255)
  applied DateTime @db.DateTime(6)
}

model django_session {
  session_key  String   @id @db.VarChar(40)
  session_data String   @db.LongText
  expire_date  DateTime @db.DateTime(6)

  @@index([expire_date], map: "django_session_expire_date_a5c62663")
}

model chat_app_chatgroup {
  id               BigInt                       @id @default(autoincrement())
  name             String                       @db.VarChar(255)
  is_personal_chat Boolean                      @default(false)
  avatar           String?                      @db.VarChar(100)
  admin_id         BigInt
  admin            user_app_profile             @relation(fields: [admin_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "chat_app_chatgroup_admin_id_0f503322_fk_user_app_profile_id")
  members          chat_app_chatgroup_members[]
  messages         chat_app_chatmessage[]

  @@index([admin_id], map: "chat_app_chatgroup_admin_id_0f503322_fk_user_app_profile_id")
}

model chat_app_chatgroup_members {
  id           BigInt             @id @default(autoincrement())
  chatgroup_id BigInt
  profile_id   BigInt
  chatgroup    chat_app_chatgroup @relation(fields: [chatgroup_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "chat_app_chatgroup_m_chatgroup_id_1fa0254f_fk_chat_app_")
  profile      user_app_profile   @relation(fields: [profile_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "chat_app_chatgroup_m_profile_id_bf7e915c_fk_user_app_")

  @@unique([chatgroup_id, profile_id], map: "chat_app_chatgroup_members_chatgroup_id_profile_id_9979eb06_uniq")
  @@index([profile_id], map: "chat_app_chatgroup_m_profile_id_bf7e915c_fk_user_app_")
}

model chat_app_chatmessage {
  id             BigInt             @id @default(autoincrement())
  content        String             @db.LongText
  sent_at        DateTime           @db.DateTime(6)
  attached_image String?            @db.VarChar(100)
  author_id      BigInt
  chat_group_id  BigInt
  author         user_app_profile   @relation(fields: [author_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "chat_app_chatmessage_author_id_d86dfb00_fk_user_app_profile_id")
  chat_group     chat_app_chatgroup @relation(fields: [chat_group_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "chat_app_chatmessage_chat_group_id_cb5c2937_fk_chat_app_")

  @@index([author_id], map: "chat_app_chatmessage_author_id_d86dfb00_fk_user_app_profile_id")
  @@index([chat_group_id], map: "chat_app_chatmessage_chat_group_id_cb5c2937_fk_chat_app_")
}

model post_app_post {
  id        BigInt                 @id @default(autoincrement())
  title     String                 @db.VarChar(255)
  content   String                 @db.LongText
  author_id BigInt
  links     post_app_link[]
  author    user_app_profile       @relation("post_authored", fields: [author_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "post_app_post_author_id_4cf2f14d_fk_user_app_profile_id")
  images    post_app_post_images[]
  likes     post_app_post_likes[]
  tags      post_app_post_tags[]
  views     post_app_post_views[]

  @@index([author_id], map: "post_app_post_author_id_4cf2f14d_fk_user_app_profile_id")
}

model post_app_image {
  id          BigInt                  @id @default(autoincrement())
  filename    String                  @db.VarChar(150)
  file        String                  @db.VarChar(100)
  uploaded_at DateTime                @db.DateTime(6)
  albums      post_app_album_images[]
  posts       post_app_post_images[]
}

model post_app_post_images {
  id       BigInt         @id @default(autoincrement())
  post_id  BigInt
  image_id BigInt
  image    post_app_image @relation(fields: [image_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "post_app_post_images_image_id_4c32a1d3_fk_post_app_image_id")
  post     post_app_post  @relation(fields: [post_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "post_app_post_images_post_id_57de509f_fk_post_app_post_id")

  @@unique([post_id, image_id], map: "post_app_post_images_post_id_image_id_66ada371_uniq")
  @@index([image_id], map: "post_app_post_images_image_id_4c32a1d3_fk_post_app_image_id")
}

model post_app_album_images {
  id       BigInt         @id @default(autoincrement())
  album_id BigInt
  image_id BigInt
  album    post_app_album @relation(fields: [album_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "post_app_album_images_album_id_e4a65934_fk_post_app_album_id")
  image    post_app_image @relation(fields: [image_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "post_app_album_images_image_id_0e0fa881_fk_post_app_image_id")

  @@unique([album_id, image_id], map: "post_app_album_images_album_id_image_id_b0db7dd5_uniq")
  @@index([image_id], map: "post_app_album_images_image_id_0e0fa881_fk_post_app_image_id")
}

model post_app_tag {
  id     BigInt               @id @default(autoincrement())
  name   String               @unique(map: "name") @db.VarChar(50)
  albums post_app_album[]
  posts  post_app_post_tags[]
}

model post_app_post_tags {
  id      BigInt        @id @default(autoincrement())
  post_id BigInt
  tag_id  BigInt
  post    post_app_post @relation(fields: [post_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "post_app_post_tags_post_id_b72298ea_fk_post_app_post_id")
  tag     post_app_tag  @relation(fields: [tag_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "post_app_post_tags_tag_id_df0ee56c_fk_post_app_tag_id")

  @@unique([post_id, tag_id], map: "post_app_post_tags_post_id_tag_id_f9d7c733_uniq")
  @@index([tag_id], map: "post_app_post_tags_tag_id_df0ee56c_fk_post_app_tag_id")
}

model post_app_link {
  id      BigInt        @id @default(autoincrement())
  url     String        @db.VarChar(200)
  post_id BigInt
  post    post_app_post @relation(fields: [post_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "post_app_link_post_id_fc5d7e2e_fk_post_app_post_id")

  @@index([post_id], map: "post_app_link_post_id_fc5d7e2e_fk_post_app_post_id")
}

model post_app_post_views {
  id         BigInt           @id @default(autoincrement())
  post_id    BigInt
  profile_id BigInt
  post       post_app_post    @relation(fields: [post_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "post_app_post_views_post_id_390fa3b5_fk_post_app_post_id")
  profile    user_app_profile @relation(fields: [profile_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "post_app_post_views_profile_id_9a080786_fk_user_app_profile_id")

  @@unique([post_id, profile_id], map: "post_app_post_views_post_id_profile_id_fb5adf39_uniq")
  @@index([profile_id], map: "post_app_post_views_profile_id_9a080786_fk_user_app_profile_id")
}

model post_app_post_likes {
  id         BigInt           @id @default(autoincrement())
  post_id    BigInt
  profile_id BigInt
  post       post_app_post    @relation(fields: [post_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "post_app_post_likes_post_id_6832916a_fk_post_app_post_id")
  profile    user_app_profile @relation(fields: [profile_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "post_app_post_likes_profile_id_be0f76a4_fk_user_app_profile_id")

  @@unique([post_id, profile_id], map: "post_app_post_likes_post_id_profile_id_3545bfa9_uniq")
  @@index([profile_id], map: "post_app_post_likes_profile_id_be0f76a4_fk_user_app_profile_id")
}

model post_app_album {
  id            BigInt                  @id @default(autoincrement())
  name          String                  @db.VarChar(255)
  created_at    DateTime                @db.DateTime(6)
  preview_image String?                 @db.VarChar(100)
  shown         Boolean                 @default(true)
  topic_id      BigInt
  topic         post_app_tag            @relation(fields: [topic_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "post_app_album_topic_id_97be9a8b_fk_post_app_tag_id")
  images        post_app_album_images[]

  @@index([topic_id], map: "post_app_album_topic_id_97be9a8b_fk_post_app_tag_id")
}

model auth_user {
  id                         Int                          @id @default(autoincrement())
  password                   String                       @db.VarChar(128)
  last_login                 DateTime?                    @db.DateTime(6)
  is_superuser               Boolean                      @default(false)
  username                   String                       @unique(map: "username") @db.VarChar(150)
  first_name                 String                       @db.VarChar(150)
  last_name                  String                       @db.VarChar(150)
  email                      String                       @db.VarChar(254)
  is_staff                   Boolean                      @default(false)
  is_active                  Boolean                      @default(true)
  date_joined                DateTime                     @default(now()) @db.DateTime(6)
  auth_user_groups           auth_user_groups[]
  auth_user_user_permissions auth_user_user_permissions[]
  django_admin_log           django_admin_log[]
  profile                    user_app_profile?
}

model user_app_profile {
  id                   BigInt                       @id @default(autoincrement())
  date_of_birth        DateTime                     @db.Date
  signature            String?                      @db.VarChar(100)
  user_id              Int                          @unique(map: "user_id")
  admin_in_chats       chat_app_chatgroup[]
  in_chatgroups        chat_app_chatgroup_members[]
  messages             chat_app_chatmessage[]
  posts                post_app_post[]              @relation("post_authored")
  likes                post_app_post_likes[]
  views                post_app_post_views[]
  avatars              user_app_avatar[]
  friendships_sent     user_app_friendship[]        @relation("friendship_sent_request")
  friendships_received user_app_friendship[]        @relation("friendship_accepted_request")
  user                 auth_user                    @relation(fields: [user_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "user_app_profile_user_id_ec83034b_fk_auth_user_id")
}

model user_app_avatar {
  id         BigInt           @id @default(autoincrement())
  image      String           @db.VarChar(100)
  active     Boolean          @default(true)
  shown      Boolean          @default(true)
  profile_id BigInt
  profile    user_app_profile @relation(fields: [profile_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "user_app_avatar_profile_id_126a14a3_fk_user_app_profile_id")

  @@index([profile_id], map: "user_app_avatar_profile_id_126a14a3_fk_user_app_profile_id")
}

model user_app_friendship {
  id          BigInt           @id @default(autoincrement())
  accepted    Boolean          @default(false)
  profile1_id BigInt
  profile2_id BigInt
  profile1    user_app_profile @relation("friendship_sent_request", fields: [profile1_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "user_app_friendship_profile1_id_9b85a45d_fk_user_app_profile_id")
  profile2    user_app_profile @relation("friendship_accepted_request", fields: [profile2_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "user_app_friendship_profile2_id_530d5ef0_fk_user_app_profile_id")

  @@index([profile1_id], map: "user_app_friendship_profile1_id_9b85a45d_fk_user_app_profile_id")
  @@index([profile2_id], map: "user_app_friendship_profile2_id_530d5ef0_fk_user_app_profile_id")
}

model user_app_verificationcode {
  id         BigInt   @id @default(autoincrement())
  username   String   @db.VarChar(150)
  code       String   @db.VarChar(255)
  created_at DateTime @db.DateTime(6)
}

generator client {
  provider = "prisma-client-js"
  output   = "../src/generated/prisma"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}
